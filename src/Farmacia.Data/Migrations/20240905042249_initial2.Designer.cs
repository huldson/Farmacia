// <auto-generated />
using System;
using Farmacia.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Farmacia.Data.Migrations
{
    [DbContext(typeof(FarmaciaContext))]
    [Migration("20240905042249_initial2")]
    partial class initial2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Farmacia.Domain.Entities.Colunas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DadosId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtFimVigencia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInicioVigencia")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Ordem")
                        .HasColumnType("int");

                    b.Property<int>("TabelasId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DadosId");

                    b.HasIndex("TabelasId");

                    b.ToTable("Colunas");
                });

            modelBuilder.Entity("Farmacia.Domain.Entities.Dados", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("Agrupador")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ColunaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtFimVigencia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInicioVigencia")
                        .HasColumnType("datetime2");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Dados");
                });

            modelBuilder.Entity("Farmacia.Domain.Entities.Industria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtFimVigencia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInicioVigencia")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Industria");
                });

            modelBuilder.Entity("Farmacia.Domain.Entities.Tabelas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtFimVigencia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInicioVigencia")
                        .HasColumnType("datetime2");

                    b.Property<int>("IndustriaId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IndustriaId");

                    b.ToTable("Tabelas");
                });

            modelBuilder.Entity("Farmacia.Domain.Entities.Colunas", b =>
                {
                    b.HasOne("Farmacia.Domain.Entities.Dados", null)
                        .WithMany("Colunas")
                        .HasForeignKey("DadosId");

                    b.HasOne("Farmacia.Domain.Entities.Tabelas", "Tabelas")
                        .WithMany()
                        .HasForeignKey("TabelasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tabelas");
                });

            modelBuilder.Entity("Farmacia.Domain.Entities.Tabelas", b =>
                {
                    b.HasOne("Farmacia.Domain.Entities.Industria", "Industria")
                        .WithMany("Tabelas")
                        .HasForeignKey("IndustriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Industria");
                });

            modelBuilder.Entity("Farmacia.Domain.Entities.Dados", b =>
                {
                    b.Navigation("Colunas");
                });

            modelBuilder.Entity("Farmacia.Domain.Entities.Industria", b =>
                {
                    b.Navigation("Tabelas");
                });
#pragma warning restore 612, 618
        }
    }
}
